// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    userId       Int           @id @default(autoincrement())
    authorityId  Int           @default(1) @map("authority_authorityId")
    username     String
    password     String
    nickname     String
    createdAt    DateTime      @default(now()) @map("created_at")
    updatedAt    DateTime      @updatedAt @map("updated_at")
    authority    Authority     @relation(fields: [authorityId], references: [authorityId], onDelete: Cascade)
    refreshToken RefreshToken?

    @@map("users")
}

model Authority {
    authorityId   Int      @id @default(autoincrement())
    authorityName UserType @default(ROLE_USER)
    createdAt     DateTime @default(now()) @map("created_at")
    updatedAt     DateTime @updatedAt @map("updated_at")
    user          User[]

    @@map("authorities")
}

enum UserType {
    ROLE_USER
    ROLE_ADMIN
}

model RefreshToken {
    id           Int      @id @default(autoincrement())
    userId       Int      @unique @map("user_userId")
    refreshToken String   @map("refresh_token")
    createdAt    DateTime @default(now()) @map("created_at")
    updatedAt    DateTime @updatedAt @map("updated_at")

    user User @relation(fields: [userId], references: [userId])

    @@map("refresh_tokens")
}
